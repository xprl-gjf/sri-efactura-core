plugins {
    // read extended project info from "projectInfo.conf"
    id("ec.com.xprl.project-info")
    id("ec.com.xprl.maven-artifact")
    id("sri-efactura-utils.java-library-conventions")
}

evaluationDependsOnChildren()

val version: String by project
val jarProjects = arrayOf(
    ":sri-efactura-model",
    ":sri-client"
)

dependencies {
    api("jakarta.xml.bind:jakarta.xml.bind-api:4.0.0")
    api("jakarta.validation:jakarta.validation-api:3.0.2")
}

val projectVersion = version
tasks.jar {
    group = "build"
    destinationDirectory.set(layout.buildDirectory.dir("libs"))
    archiveBaseName.set("sri-efactura-core")
    archiveVersion.set(projectVersion)
    from(
        jarProjects.map { projectName ->
            project(projectName).sourceSets.main.get().output
        }
    )
}

mavenArtifact {
    artifactId = "sri-efactura-core"
    artifactName = "SRI efactura core"
    artifactDescription = "Core classes for interacting with web services of SRI in Ecuador to authorise comprobantes electr√≥nicos"
}

publishing {
    repositories {
        /*
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            val releasesRepoUrl = uri(layout.buildDirectory.dir("repos/releases"))
            val snapshotsRepoUrl = uri(layout.buildDirectory.dir("repos/snapshots"))
            url = if (version.toString().endsWith("SNAPSHOT")) snapshotsRepoUrl else releasesRepoUrl
        }
         */
    }
}